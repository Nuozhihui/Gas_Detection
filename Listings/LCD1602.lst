C51 COMPILER V9.60.0.0   LCD1602                                                           04/11/2022 14:25:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Code\ARM\C51\BIN\C51.EXE HA\LCD1602\LCD1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HA;.\HA\Dalay;.\
                    -HA\LCD1602) DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "reg52.h"
   2          #include "delay.h"
   3          #include "LCD1602.H"
   4          
   5          
   6          sbit LCD_EN   = P3^4;     //LCD使能IO
   7          sbit LCD_RS   = P3^5;     //LCD写数据或命令控制IO
   8          sbit LCD_RW   = P3^6;     //LCD读写控制IO
   9          sbit LED_WE = P2^6;
  10          sbit LED_DU = P2^7;
  11          
  12          #define LCD1602_DataPort P0   //LCD1602数据端口
  13          //INT8U strDEC[4];
  14          INT8U strHEX[3];//INT8UtostrHEX函数转换的字符串显示16进制
  15          /*
  16          INT8U *INT8UtostrDEC(INT8U num)
  17          {
  18            INT8U i2, i1, i0,i;
  19            i2 = num / 100;
  20            i1 = num % 100 / 10;
  21            i0 = num % 100 % 10;
  22            strDEC[i]=i2+48;
  23            i++;  
  24            strDEC[i]=i1+48;
  25            i++;  
  26            strDEC[i]=i0+48;
  27            i++;
  28            strDEC[i] = '\0';
  29            return strDEC;  
  30          }
  31          */
  32          INT8U *INT8UtostrHEX(INT8U num) //将一个字节的数据转换为字符串
  33          {
  34   1        INT8U i = 0;
  35   1        switch(num/16)
  36   1        {
  37   2          case 0:   strHEX[i] = '0';  i++;  break;
  38   2          case 1:   strHEX[i] = '1';  i++;  break;
  39   2          case 2:   strHEX[i] = '2';  i++;  break;
  40   2          case 3:   strHEX[i] = '3';  i++;  break;
  41   2          case 4:   strHEX[i] = '4';  i++;  break;
  42   2          case 5:   strHEX[i] = '5';  i++;  break;
  43   2          case 6:   strHEX[i] = '6';  i++;  break;
  44   2          case 7:   strHEX[i] = '7';  i++;  break;
  45   2          case 8:   strHEX[i] = '8';  i++;  break;
  46   2          case 9:   strHEX[i] = '9';  i++;  break;
  47   2          case 10:  strHEX[i] = 'A';  i++;  break;
  48   2          case 11:  strHEX[i] = 'B';  i++;  break;
  49   2          case 12:  strHEX[i] = 'C';  i++;  break;
  50   2          case 13:  strHEX[i] = 'D';  i++;  break;
  51   2          case 14:  strHEX[i] = 'E';  i++;  break;
  52   2          case 15:  strHEX[i] = 'F';  i++;  break;
  53   2        }
  54   1      
C51 COMPILER V9.60.0.0   LCD1602                                                           04/11/2022 14:25:40 PAGE 2   

  55   1        switch(num%16)
  56   1        {
  57   2          case 0:   strHEX[i] = '0';  i++;  break;
  58   2          case 1:   strHEX[i] = '1';  i++;  break;
  59   2          case 2:   strHEX[i] = '2';  i++;  break;
  60   2          case 3:   strHEX[i] = '3';  i++;  break;
  61   2          case 4:   strHEX[i] = '4';  i++;  break;
  62   2          case 5:   strHEX[i] = '5';  i++;  break;
  63   2          case 6:   strHEX[i] = '6';  i++;  break;
  64   2          case 7:   strHEX[i] = '7';  i++;  break;
  65   2          case 8:   strHEX[i] = '8';  i++;  break;
  66   2          case 9:   strHEX[i] = '9';  i++;  break;
  67   2          case 10:  strHEX[i] = 'A';  i++;  break;
  68   2          case 11:  strHEX[i] = 'B';  i++;  break;
  69   2          case 12:  strHEX[i] = 'C';  i++;  break;
  70   2          case 13:  strHEX[i] = 'D';  i++;  break;
  71   2          case 14:  strHEX[i] = 'E';  i++;  break;
  72   2          case 15:  strHEX[i] = 'F';  i++;  break;
  73   2        }
  74   1        strHEX[i] = '\0';
  75   1        return (strHEX);
  76   1      } 
  77          
  78          BOOL LCD1602_Check_Busy() //LCD1602忙判断 
  79          { 
  80   1        LCD1602_DataPort = 0xFF; 
  81   1        LCD_RS = 0; //根据规定，RS为低电平，RW为高电平时，可以读状态
  82   1        LCD_RW = 1; 
  83   1        LCD_EN = 0; 
  84   1        _nop_(); 
  85   1        LCD_EN = 1;
  86   1        return (BOOL)(LCD1602_DataPort & 0x80);
  87   1      }
  88          /*
  89          void LCD1602_Clear()
  90          {
  91             LCD1602_Write_Com(0x01);    //显示清屏 
  92             Delay_Ms(5); 
  93          }*/
  94          /*
  95          INT8U LCDE1602_DATAP_ADDR()
  96          {
  97            LCD1602_DataPort = 0xFF; 
  98            LCD_RS = 0; //根据规定，RS为低电平，RW为高电平时，可以读状态
  99            LCD_RW = 1; 
 100            LCD_EN = 0; 
 101            _nop_(); 
 102            LCD_EN = 1;
 103            return (LCD1602_DataPort & 0x7f); 
 104          } */
 105          
 106          void LCD1602_Write_Com(INT8U com)  //LCD1602写命令
 107          {
 108   1        while(LCD1602_Check_Busy()); //忙则等待
 109   1        LCD_RS = 0; 
 110   1        LCD_RW = 0; 
 111   1        LCD_EN = 1; 
 112   1        LCD1602_DataPort= com; 
 113   1        _nop_(); 
 114   1        LCD_EN = 0; 
 115   1      }
 116          
C51 COMPILER V9.60.0.0   LCD1602                                                           04/11/2022 14:25:40 PAGE 3   

 117          void LCD1602_Write_Dat(INT8U dat)   //LCD1602写数据
 118          {
 119   1        while(LCD1602_Check_Busy()); //忙则等待
 120   1        LCD_RS = 1;
 121   1        LCD_RW = 0; 
 122   1        LCD_EN = 1;
 123   1        LCD1602_DataPort= dat; 
 124   1        _nop_();
 125   1        LCD_EN = 0;   
 126   1      }
 127          
 128          
 129          void LCD1602_Write_String(INT8U x,INT8U y,INT8U *s) //LCD1602写字符串
 130          {     
 131   1        if (y == 0) 
 132   1        {     
 133   2          LCD1602_Write_Com(0x80 + x);     //表示第一行
 134   2        }
 135   1        else 
 136   1        {      
 137   2          LCD1602_Write_Com(0xC0 + x);      //表示第二行
 138   2        }        
 139   1        while (*s != '\0') 
 140   1        {     
 141   2          LCD1602_Write_Dat(*s++);         
 142   2        }
 143   1      }
 144          
 145          void LCD1602_Init() //LCD1602初始化
 146          {
 147   1        LCD_RW=0;
 148   1          LED_WE = 0;
 149   1        LED_DU = 0;
 150   1        LCD_EN=0;
 151   1         LCD1602_Write_Com(0x38);    /*显示模式设置*/ 
 152   1         LCD1602_Write_Com(0x06);    /*显示光标移动设置*/
 153   1         LCD1602_Write_Com(0x0C);    /*显示开及光标设置*/
 154   1         LCD1602_Write_Com(0x01);    /*显示清屏*/ 
 155   1         Delay_Ms(5);
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    572    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
